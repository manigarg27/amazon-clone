[{"C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\index.js":"1","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\reportWebVitals.js":"2","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\App.js":"3","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\StateProvider.js":"4","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\reducer.js":"5","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Home.js":"6","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Login.js":"7","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\firebase.js":"8","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Header.js":"9","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Checkout.js":"10","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Product.js":"11","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\CheckoutProduct.js":"12","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Subtotal.js":"13","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Payment.js":"14","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\axios.js":"15","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Orders.js":"16","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Order.js":"17"},{"size":737,"mtime":1608167840000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608167840000,"results":"20","hashOfConfig":"19"},{"size":1883,"mtime":1608254322788,"results":"21","hashOfConfig":"19"},{"size":472,"mtime":1608167840000,"results":"22","hashOfConfig":"19"},{"size":1076,"mtime":1608254089506,"results":"23","hashOfConfig":"19"},{"size":2494,"mtime":1608167840000,"results":"24","hashOfConfig":"19"},{"size":2126,"mtime":1608167840000,"results":"25","hashOfConfig":"19"},{"size":572,"mtime":1608167840000,"results":"26","hashOfConfig":"19"},{"size":2044,"mtime":1608309765737,"results":"27","hashOfConfig":"19"},{"size":1052,"mtime":1608167840000,"results":"28","hashOfConfig":"19"},{"size":1009,"mtime":1608256176583,"results":"29","hashOfConfig":"19"},{"size":1272,"mtime":1608167840000,"results":"30","hashOfConfig":"19"},{"size":1032,"mtime":1608167840000,"results":"31","hashOfConfig":"19"},{"size":5539,"mtime":1608256172082,"results":"32","hashOfConfig":"19"},{"size":285,"mtime":1608253293088,"results":"33","hashOfConfig":"19"},{"size":1036,"mtime":1608308544897,"results":"34","hashOfConfig":"19"},{"size":1247,"mtime":1608308745434,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"lahwa",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\index.js",[],["77","78"],"C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\App.js",["79","80"],"import React,  { useEffect }  from \"react\";\nimport './App.css';\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Checkout from \"./Checkout\";\nimport Login from \"./Login\";\nimport { auth } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport Payment from \"./Payment\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport Orders from './Orders';\n\nconst promise = loadStripe(\n  \"pk_test_51Hz7wRBBW5JF6phFLDarUfjPjSDWVvdDp91ZX3CNHejqv1bdH3EmjMJk76XiBGy3GyoHiD8Ouzq8iKzhzxiKsY5a00yFHRnqtH\"\n);\n\n\nfunction App() {\n\n  const [{}, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // will only run once when the app component loads...\n\n    auth.onAuthStateChanged((authUser) => {\n      console.log(\"THE USER IS >>> \", authUser);\n\n      if (authUser) {\n        // the user just logged in / the user was logged in\n\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser,\n        });\n      } else {\n        // the user is logged out\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        });\n      }\n    });\n  }, []);\n\n\n  return (\n\n    //BEM\n    <Router>\n    <div className=\"app\">\n  \n      <Switch>\n        <Route path=\"/checkout\">\n          <Header />\n          <Checkout/>\n        </Route>\n\n         <Route path=\"/orders\">\n           <Header />\n           <Orders />\n         </Route>\n\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route path=\"/payment\">\n        <Header />\n            <Elements stripe={promise}>\n              <Payment />\n            </Elements>\n            \n          </Route>\n\n        <Route path=\"/\">\n          <Header />\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n    </Router>\n     \n\n  );\n}\n\nexport default App;\n","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\StateProvider.js",[],"C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\reducer.js",[],"C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Home.js",[],"C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Login.js",[],"C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\firebase.js",[],"C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Header.js",["81"],"C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Checkout.js",["82"],"import React from 'react';\nimport './Checkout.css';\nimport Subtotal from \"./Subtotal\";\nimport { useStateValue } from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\n\n\nfunction Checkout() {\n\n  const [{ basket, user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"checkout\">\n      <div className=\"checkout__left\">\n      <img\n          className=\"checkout__ad\"\n          src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\"\n          alt=\"\"\n        />\n\n      <div>\n        <h3>Hello, {user?.email}</h3>\n        <h2 className=\"checkout__title\">Your Shopping Basket</h2>\n        \n        {basket.map(item => (\n            <CheckoutProduct\n              id={item.id}\n              title={item.title}\n              image={item.image}\n              price={item.price}\n              rating={item.rating}\n            />\n          ))}\n\n      </div>\n      </div>\n\n      <div className=\"checkout__right\">\n       <Subtotal/>\n\n      </div>\n  \n    </div>\n  )\n}\n\nexport default Checkout\n","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Product.js",["83"],"import React from \"react\";\nimport \"./Product.css\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction Product({ id, title, image, price, rating }) {\n  const [{basket}, dispatch] = useStateValue();\n\n  const addToBasket = () => {\n    // dispatch the item into the data layer\n    dispatch({\n      type: \"ADD_TO_BASKET\",\n      item: {\n        id: id,\n        title: title,\n        image: image,\n        price: price,\n        rating: rating,\n      },\n    });\n  };\n\n  return (\n    <div className=\"product\">\n      <div className=\"product__info\">\n        <p>{title}</p>\n        <p className=\"product__price\">\n          <small>â‚¹</small>\n          <strong>{price}</strong>\n        </p>\n        <div className=\"product__rating\">\n          {Array(rating)\n            .fill()\n            .map((_, i) => (\n              <p>ðŸŒŸ</p>\n            ))}\n        </div>\n      </div>\n\n      <img src={image} alt=\"\" />\n\n      <button onClick={addToBasket}>Add to Basket</button>\n    </div>\n  );\n}\n\nexport default Product;\n","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\CheckoutProduct.js",["84"],"import React from 'react';\nimport './CheckoutProduct.css'\nimport { useStateValue } from \"./StateProvider\";\n\nfunction CheckoutProduct({ id, image, title, price, rating, hideButton }) {\n    const [{ basket }, dispatch] = useStateValue();\n\n    const removeFromBasket = () => {\n        // remove the item from the basket\n        dispatch({\n            type: 'REMOVE_FROM_BASKET',\n            id: id,\n        })\n    }\n\n    return (\n        <div className='checkoutProduct'>\n            <img className='checkoutProduct__image' src={image} alt=\"\" />\n\n            <div className='checkoutProduct__info'>\n                <p className='checkoutProduct__title'>{title}</p>\n                <p className=\"checkoutProduct__price\">\n                    <small>â‚¹</small>\n                    <strong>{price}</strong>\n                </p>\n                <div className=\"checkoutProduct__rating\">\n                    {Array(rating)\n                    .fill()\n                    .map((_, i) => (\n                        <p>ðŸŒŸ</p>\n                    ))}\n                </div>\n                {!hideButton && (\n                    <button onClick={removeFromBasket}>Remove from Basket</button>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default CheckoutProduct","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Subtotal.js",["85"],"import React from 'react';\nimport \"./Subtotal.css\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { useStateValue } from \"./StateProvider\";\nimport { getBasketTotal } from \"./reducer\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction Subtotal() {\n  const history = useHistory();\n  const [{basket}, dispatch] = useStateValue();\n\n\n  return (\n    <div className=\"subtotal\">\n       <CurrencyFormat\n        renderText={(value) => (\n          <>\n            <p>\n            \n              Subtotal ({basket.length} items): <strong>{value}</strong>\n            </p>\n            <small className=\"subtotal__gift\">\n              <input type=\"checkbox\" /> This order contains a gift\n            </small>\n          </>\n        )}\n        decimalScale={2}\n        value={getBasketTotal(basket)}\n        displayType={\"text\"}\n        thousandSeparator={true}\n        prefix={\"â‚¹\"}\n      />\n\n      <button onClick={e => history.push('/payment')}>Proceed to checkout</button>\n\n      \n    </div>\n  );\n}\n\nexport default Subtotal","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Payment.js",["86"],"import React, { useState, useEffect } from 'react';\nimport './Payment.css';\nimport { useStateValue } from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { getBasketTotal } from \"./reducer\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from './axios';\nimport { db } from \"./firebase\";\n\nfunction Payment() {\n  const [{ basket, user }, dispatch] = useStateValue();\n  const history = useHistory();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n\n\n  useEffect(() => {\n    // generate the special stripe secret which allows us to charge a customer\n    const getClientSecret = async () => {\n        const response = await axios({\n            method: 'post',\n            // Stripe expects the total in a currencies subunits\n            url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n        });\n        setClientSecret(response.data.clientSecret)\n    }\n\n    getClientSecret();\n}, [basket])\n\nconsole.log('THE SECRET IS >>>', clientSecret)\nconsole.log('ðŸ‘±', user)\n\nconst handleSubmit = async (event) => {\n    // do all the fancy stripe stuff...\n    event.preventDefault();\n    setProcessing(true);\n\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n            card: elements.getElement(CardElement)\n        }\n    }).then(({ paymentIntent }) => {\n\n        db.collection('users')\n          .doc(user?.uid)\n          .collection('orders')\n          .doc(paymentIntent.id)\n          .set({\n                  basket: basket,\n                  amount: paymentIntent.amount,\n                  created: paymentIntent.created\n              })\n\n        setSucceeded(true);\n        setError(null)\n        setProcessing(false)\n\n        dispatch({\n            type: 'EMPTY_BASKET'\n        })\n\n        history.replace('/orders')\n    })\n\n}\n\n\n\n\n  const handleChange = event => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n}\n\n\n\n\n  return (\n    <div className='payment'>\n        <div className='payment__container'>\n            <h1>\n                Checkout (\n                    <Link to=\"/checkout\">{basket?.length} items</Link>\n                    )\n            </h1>\n\n\n            {/* Payment section - delivery address */}\n            <div className='payment__section'>\n                <div className='payment__title'>\n                    <h3>Delivery Address</h3>\n                </div>\n                <div className='payment__address'>\n                    <p>{user?.email}</p>\n                    <p>Firozabad</p>\n                    <p>Uttar Pradesh</p>\n                </div>\n            </div>\n\n            {/* Payment section - Review Items */}\n            <div className='payment__section'>\n                <div className='payment__title'>\n                    <h3>Review items and delivery</h3>\n                </div>\n                <div className='payment__items'>\n                    {basket.map(item => (\n                        <CheckoutProduct\n                            id={item.id}\n                            title={item.title}\n                            image={item.image}\n                            price={item.price}\n                            rating={item.rating}\n                        />\n                    ))}\n                </div>\n            </div>\n        \n\n            {/* Payment section - Payment method */}\n            <div className='payment__section'>\n                <div className=\"payment__title\">\n                    <h3>Payment Method</h3>\n                </div>\n                <div className=\"payment__details\">\n                        {/* Stripe magic will go */}\n\n                        <form onSubmit={handleSubmit}>\n                                <CardElement onChange={handleChange}/>\n\n                                <div className='payment__priceContainer'>\n                                    <CurrencyFormat\n                                        renderText={(value) => (\n                                            <h3>Order Total: {value}</h3>\n                                        )}\n                                        decimalScale={2}\n                                        value={getBasketTotal(basket)}\n                                        displayType={\"text\"}\n                                        thousandSeparator={true}\n                                        prefix={\"â‚¹\"}\n                                    />\n                                    <button disabled={processing || disabled || succeeded}>\n                                        <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                                    </button>\n                                </div>\n\n                                  {/* Errors */}\n                                {error && <div>{error}</div>}\n                            </form>\n                    </div>\n                            \n                           \n                </div>\n            </div>\n        </div>\n)\n}\n\nexport default Payment","C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\axios.js",[],"C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Orders.js",["87","88"],"C:\\Users\\Mani Garg\\Documents\\GitHub\\amazon-clone\\src\\Order.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":22,"column":10,"nodeType":"95","messageId":"96","endLine":22,"endColumn":12},{"ruleId":"97","severity":1,"message":"98","line":45,"column":6,"nodeType":"99","endLine":45,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":11,"column":28,"nodeType":"103","messageId":"104","endLine":11,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":10,"column":28,"nodeType":"103","messageId":"104","endLine":10,"endColumn":36},{"ruleId":"101","severity":1,"message":"105","line":6,"column":11,"nodeType":"103","messageId":"104","endLine":6,"endColumn":17},{"ruleId":"101","severity":1,"message":"105","line":6,"column":14,"nodeType":"103","messageId":"104","endLine":6,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":11,"column":20,"nodeType":"103","messageId":"104","endLine":11,"endColumn":28},{"ruleId":"101","severity":1,"message":"106","line":48,"column":11,"nodeType":"103","messageId":"104","endLine":48,"endColumn":18},{"ruleId":"101","severity":1,"message":"105","line":8,"column":12,"nodeType":"103","messageId":"104","endLine":8,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":8,"column":28,"nodeType":"103","messageId":"104","endLine":8,"endColumn":36},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'basket' is assigned a value but never used.","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [dispatch]",{"range":"112","text":"113"},[1208,1210],"[dispatch]"]